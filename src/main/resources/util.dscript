# GENERIC LOOPER CODE SNIPPIT for Denizen 0.8.4+

# ---- sample snippet of a script CALLING the loop
# You can call this script to test out the GL (Generic Looper)
# by using the command '- runtask "GL sample snippet"'
"GL Sample snippet":
  type: task

  script:
  - flag global example_loop_flag:->:aufdemrand
  - flag global example_loop_flag:->:Jeebiss
  - flag global example_loop_flag:->:DrBix
  - flag global example_loop_flag:->:davidcernat
  - flag global example_loop_flag:->:fullwall
  - flag global example_loop_flag:->:Mastaba
  - runtask 'generic looper' 'context:g|example_loop_flag|player announcement script|playername'
  - flag global example_loop_flag:!


# Below is the example script that will be executed for
# each iteration.
# The item from the iteration will be stored in a global flag
# with the name of the value set in the iterate_value_name context
'player announcement script':
  type: task
  script:
  - announce '<flag.g:playername> has been ITERATED!'



# ------------------------------------
# GENERIC LOOPER, by aufdemrand :)
#
# For use, it requires some context:
# flag_name - the name of the flag to iterate through
# flag_type - the type of the flag, should be either P, G or N
# task_action - the name of the task script to execute
# iterate_value_name - the name of the global flag that will hold
#    each iterated value
#
# To specify context, use the context argument. See the example provided.
#
# Upon each iteration, GL (GENERIC LOOPER) will set a global flag
# global flag with the name specified (iterate_value_name) which 
# will contain the currently iterated flag value.
#
# STOP! This shouldn't need to be changed, it's generic.
# ------------------------------------
"generic looper":
  type: task
  context: flag_name|flag_type|task_action|iterate_value_name

  script:
  - if '<flag.g:gls_initialized_<entry.script.name>_<player.name||<npc.id>>||false>' == false
    runtask 'gls_initialize me'
      'context:size, <flag.<context.flag_type>:<context.flag_name>.size||0>|
      id, <entry.script.name>'

  - if '<flag.g:gls_size_<entry.script.name>_<player.name||<npc.id>>>' >= '<flag.g:gls_iterator_<entry.script.name>_<player.name||<npc.id>>>'
    runtask 'gls_execute'
      'context:task_action, <context.task_action>|
      iterate_value_name, <context.iterate_value_name>|
      id, <entry.script.name>|
      flag_type, <context.flag_type>|
      flag_name, <context.flag_name>'
    else runtask gls_breakdown
      'context:id, <entry.script.name>|
      iterate_value_name, <context.iterate_value_name>'


"gls_initialize me":
  type: task
  context: size|id

  script:
  - flag global 'gls_initialized_<context.id>_<player.name||<npc.id>>:true'
  - flag global 'gls_iterator_<context.id>_<player.name||<npc.id>>:1'
  - flag global 'gls_size_<context.id>_<player.name||<npc.id>>:<context.size>'


"gls_execute":
  type: task
  context: flag_name, flag_type, task_action, iterate_value_name, id

  script:
  - flag global '<context.iterate_value_name>:<flag.<context.flag_type>:<context.flag_name>[<flag.g:gls_iterator_<context.id>_<player.name||<npc.id>>.asint||>]>'
  - flag global 'gls_iterator_<context.id>_<player.name||<npc.id>>:+:1'
  - runtask '<context.task_action>'
  - runtask 'generic looper' 
    'context:flag_name, <context.flag_name>|
    flag_type, <context.flag_type>|
    task_action, <context.task_action>|
    iterate_value_name, <context.iterate_value_name>'


"gls_breakdown":
  type: task
  context: id, iterate_value_name

  script:
  - flag global 'gls_initialized_<context.id>_<player.name||<npc.id>>:!'
  - flag global 'gls_iterator_<context.id>_<player.name||<npc.id>>:!'
  - flag global 'gls_size_<context.id>_<player.name||<npc.id>>:!'
  - flag global '<context.iterate_value_name>:!'